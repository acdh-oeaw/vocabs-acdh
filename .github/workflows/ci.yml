name: CI

on: [push]

jobs:
  build-test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php_version: [7.2, 7.3, 7.4]
        experimental: [false]
        include:
          - php_version: 8.0
            experimental: true

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Cache Fuseki installation
      uses: actions/cache@v2
      with:
        path: tests/apache-jena-fuseki-*
        key: fuseki-${{ hashFiles('tests/init_fuseki.sh') }}

    - name: Start up Fuseki
      run: cd tests; sh ./init_fuseki.sh
    
    - name: Cache Composer dependencies
      uses: actions/cache@v2
      with:
        path: |
          /tmp/composer-cache
          vendor
          components
        key: ${{ runner.os }}-php${{ matrix.php_version}}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php${{ matrix.php_version}}-

    - name: Install Composer dependencies
      uses: php-actions/composer@v5
      with:
        php_version: ${{ matrix.php_version }}
        php_extensions: gettext intl xsl pcov

    - name: Run PHPUnit tests
      uses: php-actions/phpunit@91ff02a58932e63741157ea8c04e7e7077233537
      env:
        LANGUAGE: fr
      with:
        version: 8.5
        php_version: ${{ matrix.php_version }}
        php_extensions: gettext intl xsl pcov
        memory_limit: 512M

    - name: Publish code coverage to Code Climate
      uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: fb98170a5c7ea9cc2bbab19ff26268335e6a11a4f8267ca935e5e8ff4624886c
      with:
        prefix: /app

    - name: Publish code coverage to Codecov
      uses: codecov/codecov-action@v1
    build_and_push_to_registry:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: generate build instructions using herokuish
          run: |
            cp -r ./dockerfiles/Dockerfile.ubuntu ./Dockerfile
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to DockerHub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1 
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: .
            platforms: linux/amd64,linux/arm64
            push: true
            tags: |
              acdhch/${{ env.IMAGE_TAG }}
              ghcr.io/acdh-oeaw/${{ env.IMAGE_TAG }}
  rancher:
    needs: build_and_push_to_registry
    name: Deploy to rancher
    runs-on: ubuntu-latest
    steps:
    - name: Rancher Deploy Action
      run: |
        curl -i -X POST "${{ secrets.RANCHERURL }}?action=redeploy" -H "Authorization: Bearer ${{ secrets.RANCHER_BARER_TOKEN }}"
